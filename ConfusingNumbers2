T.c --> 5^L
S.c --> L , where L is no of digits

class Solution {
    int count = 0;
    HashMap<Integer, Integer> map;
    public int confusingNumberII(int n) {
       map = new HashMap<>();
       map.put(0,0);
       map.put(1,1);
       map.put(6,9);
       map.put(8,8);
       map.put(9,6);

       dfs(0,n);
       return count;   
    }
    public void dfs(long curr, int n){
        //base
        if(curr > n){
            return ;
        }
        //logic
        if(isConfusing(curr)){
            // System.out.println(curr);
            count++;
        }
        for(int key: map.keySet()){
            long newcurr = curr*10+key;
            if(newcurr != 0){
                dfs(newcurr,n);
            }
        }
    }
    public boolean isConfusing(long curr){
        long rev = 0;
        long temp = curr;
        while(temp > 0){
            long temp1 = temp%10;
            rev = rev*10 +map.get((int)temp1);
            temp = temp/10;
        }
        return rev != curr;
    }
}